<html>

<head>
    <title>一元三次方程(I)</title>
    <meta name="Microsoft Theme" content="indust 011">

<body>
    <p align="center"><u><b>
                <font size="5">一元三次方程(I)</font>
            </b></u></p>
    <p>程式可以解一元三次方程式，若果答為分數(有理數)，本程式較第(II)版有較大機會可直接得出分數答案，建議將計數機預先設定為假分數形式表示(按
        <font color="#FF0000">SHIFT SETUP → → 2</font>&nbsp; )。
    </p>
    <p>第二個程式只能計算<font color="#FF0000">實根</font>，若果有學習過複數的朋友或需要計算<font color="#FF0000">複數根</font>，請使用第
        一個程式。</p>
    <p>程式更新日期: 2015年4月25日</p>
    <p>
        <font color="#FF0000">注意</font> : 若果不需要記存答案，程式中<font color="#008000">綠色</font>部份可以不輸入。
    </p>
    <p>第一個程式 (<font color="#0000FF">複數版</font> 126 或 <font color="#008000">124</font> bytes，使用記憶A、B、C及M)</p>
    <p>
        <font color="#FF0000">程式需要在 CMPLX 模式下執行，因此在選擇新程式位置後，按 2 選用CMPLX模式。</font>
    </p>
    <p>?→A: ?→B: - B┘(3A→B: ?→C: C┘A→C: ?→M:</p>
    <p>B<sup>3</sup> - BAns┘2
        - M┘(2A→M: √( ( C┘3 - B<sup>2</sup>)<sup>3</sup>
        + Ans<sup>2</sup>
        <font color="#FF0000">M+</font>:
    </p>
    <p>If Ans=Conig( Ans: Then<font color="#FF0000"> <sup>
                3</sup>√( </font>M)
        +<sup>
            <font color="#FF0000">3</font>
        </sup>
        <font color="#FF0000">√(</font> M - 2Ans:
    </p>
    <p>Else 2
        <font color="#FF0000"><sup>3</sup>√(</font>Abs(
        M ) ) cos ( 3<sup>-1</sup>arg( M: IfEnd: Ans + B→A◢
    </p>
    <p>3B - Ans→M: M┘2 +
        √(AM
        - C + M<sup>2</sup>┘4<font color="#FF0000">M- </font>
        <font color="#008000">→B</font>◢
        M
    </p>
    <p>　</p>
    <p>第二個程式 (<font color="#008000">128</font> 或 130 bytes
        <font color="#0000FF">實數版 (Comp模式)</font>)
    </p>
    <p>
        <font color="#FF0000">程式需要在 </font>
        <font color="#0000FF">COMP</font>
        <font color="#FF0000"> 模式 </font>
        <font color="#0000FF">(實數)</font>
        <font color="#FF0000"> 下執行，因此在選擇新程式位置後，按 1 選用COMP模式。</font>
    </p>
    <p>?→A: ?→B: ?→C: ?→M: - B┘(3A→B: BC<font color="#FF0000">M+</font>: C┘A→C: </p>
    <p>B<sup>3</sup> - M┘(2A→M: B<sup>2</sup> - C┘3→D:
        M<sup>2</sup> - Ans<sup>3</sup>: </p>
    <p>If 0&gt;Ans: Then 2 √( D ) cos( 3<sup>-1</sup>
        <font color="#FF0000">cos<sup>-1</sup>(</font> M<span lang="en">
            <font face="新細明體">÷</font>
        </span>√( D<sup>3</sup>:
        Else √( Ans<font color="#FF0000">M+</font>:
    </p>
    <p>
        <font color="#FF0000"><sup>
                3</sup>√(</font>M
        )+<sup>
            <font color="#FF0000">3</font>
        </sup>
        <font color="#FF0000">√(</font> M - 2 Ans:
        IfEnd: Ans + B→A◢ 3B - Ans→M:
    </p>
    <p>M┘2 +
        √(AM
        - C + M<sup>2</sup>┘4
        <font color="#FF0000">M- </font>
        <font color="#008000" face="新細明體">→B</font>◢ M
    </p>
    <p>　</p>
    <p>
        <font color="#800080"><b>另一個複數根版本程式 (可保留輸入係數於記憶A, B, C及D)</b></font>
    </p>
    <p>程式由網友<span class="gen"><span class="postername">
                <font color="#0000FF">
                    roviury</font> 提供。
            </span> </span></p>
    <p>
        <font color="#FF0000">注意</font> : 沒有記存最初的兩根，第三根則儲存在記憶M。
    </p>
    <p>第三個程式 (<font color="#0000FF">複數版</font> 123
        bytes)</p>
    <p>
        <font color="#FF0000">程式需要在 CMPLX 模式下執行，因此在選擇新程式位置後，按 2 選用CMPLX模式。</font>
    </p>
    <p>?→A: ?→B: ?→C: ?→D: </p>
    <p>9A(BC - 3AD)┘2 - B<sup>3</sup>→M: √( M<sup>2</sup> + ( 3AC -
        B<sup>2</sup>)<sup>3</sup>
        <font color="#FF0000">M+</font>: <br>
        <br>
        If Ans=Conig( Ans: Then <font color="#FF0000"><sup>3</sup>√(</font> M) +
        <font color="#FF0000"><sup>3</sup>√(</font> M - 2Ans: <br>
        <br>
        Else 2 <font color="#FF0000"><sup>3</sup>√(</font>Abs( M ) ) cos ( 3<sup>-1</sup>arg(
        M: IfEnd:
    </p>
    <p>(Ans - B)┘(3A◢ - B┘A - Ans→M: M┘2:</p>
    <p>Ans + √(- 3 Ans<sup>2</sup> - BM┘A - C┘A <font color="#FF0000">M-</font>◢ M</p>
    <p>　</p>
    <p>例題1: 解 3x<sup>3</sup> - 5x<sup>2</sup> + x - 4 =0</p>
    <p>
        按 Prog 1&nbsp;
        再按 3 EXE - 5 EXE 1 EXE
        - 4 EXE (顯示第一個根為1.86977)</p>
    <p>
        EXE <font color="#FF0000"> <strong> (第二個程式出現 Math ERROR，而第一個程式右上角出現R&lt;=&gt;I，表示為複數解)</strong>
        </font>
    </p>
    <p>
        (顯示第二個根實數部為 -
        0.101554) </p>
    <p>
        Shift Re&lt;=&gt;Im (顯示第
        二個根虛數部為 0.838323 i)</p>
    <p>
        EXE (顯示第三個根的實數部為
        - 0.101554)</p>
    <p>
        Shift Re&lt;=&gt;Im (顯示第
        三個根虛數部為
        - 0.838323 i)</p>
    <p>　</p>
    <p>例題2: 解 2x<sup>3</sup> - x<sup>2</sup> - 72x + 36 =0</p>
    <p>
        按 Prog 1&nbsp;
        再按 2 EXE - 1 EXE - 72
        EXE 36 EXE (顯示第一個根為6)</p>
    <p>EXE (顯示第二個根為 1/2) EXE (顯示第
        三個根為
        -6)</p>
    <p>　</p>
    <p>
        例題3:
        解 x<sup>2</sup> - 7x +
        12 = 0&nbsp; (一元二次方程)</p>
    <p>
        方程可以寫成 x<sup>3</sup> - 7x<sup>2</sup> + 12x = 0 (其中捨去一個 x=0 的解)</p>
    <p>
        按 Prog 1&nbsp;
        再按 1 EXE
        - 7 EXE 12 EXE 0 EXE(顯示第一個實數根為4) </p>
    <p>
        EXE (顯示第二個實數根為3)
        EXE (顯示第三個根為0 <font color="#FF0000">(捨去)</font>)</p>
    <p>　</p>
    <p>註1: 第一個程式執行完成後，可按
        RCL A、RCL B 及RCL M分別會顯示三個根的數值。
        第一個程式若沒有綠色程式碼，第一個根及第三個根記存在記憶A及M中，第二個根沒有記存，若為複數根可以參考第三個根，因為第二個根與第三個根有共軛複數的關係。</p>
    <p>註2: 輸入的係數為整數或分數較為理想，若果輸入的係數為小數，準確度有可能會減少一點。</p>
    <p>
        註3: 第一個根必為實數根。</p>
    <p>
        註4: 程式用作解一元二次方程時，要捨去其中一個0的解，另外這個0的解有可能因計數機的誤差而出現一個很小的數值。</p>
    <p>
        　</p>
    <p>　</p>
    <p><a href="fx-50F_Plus.htm">返回 CASIO fx-50FH、fx-3650P II、fx-50FH II及fx-50F PLUS 程式集</a></p>
</body>

</html>